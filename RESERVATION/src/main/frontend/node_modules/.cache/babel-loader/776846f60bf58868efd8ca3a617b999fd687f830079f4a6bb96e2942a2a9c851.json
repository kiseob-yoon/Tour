{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'../css/modal.css';import chatIcon from'../img/chat.png';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Chat(){const[messages,setMessages]=useState([]);const[input,setInput]=useState('');const[isModalOpen,setIsModalOpen]=useState(false);const[selectedQuestion,setSelectedQuestion]=useState('');const[isLoading,setIsLoading]=useState(false);// 로딩 상태 추가\nconst exampleQuestions=['제주도 여행 가고싶어','강원도 맛집 추천해줘','부산 관광지 추천해줘'];useEffect(()=>{if(isModalOpen){setMessages([{text:'무엇을 도와드릴까요?',sender:'bot'}]);}},[isModalOpen]);useEffect(()=>{if(isLoading){setMessages(prevMessages=>[...prevMessages,{text:'로딩 중...',sender:'bot'}]);}},[isLoading]);// isLoading 상태가 변경될 때만 useEffect가 실행되도록 설정\nconst fetchReply=async message=>{try{const{data}=await axios.post('/chat',{message});return data.response;}catch(error){console.error('Error fetching reply:',error);return'Failed to get response from server';}};const handleSend=async message=>{// 사용자의 질문을 먼저 대화 영역에 표시합니다.\nsetMessages(prevMessages=>[...prevMessages,{text:message,sender:'user'}]);// 로딩 상태를 활성화합니다.\nsetIsLoading(true);// 추천 질문을 사라지게 설정합니다.\nsetSelectedQuestion(message);try{// 답변을 받아옵니다.\nconst reply=await fetchReply(message);// 답변을 받은 후에 대화 영역에 표시합니다.\nsetMessages(prevMessages=>[...prevMessages,{text:reply,sender:'bot'}]);}catch(error){console.error('Error fetching reply:',error);// 에러가 발생했을 경우 대화 영역에 에러 메시지를 표시합니다.\nsetMessages(prevMessages=>[...prevMessages,{text:'Failed to get response from server',sender:'bot'}]);}finally{// 로딩 상태를 비활성화합니다.\nsetIsLoading(false);}};const handleInputChange=e=>{setInput(e.target.value);};const handleKeyPress=e=>{if(e.key==='Enter'){handleSend(input);setInput('');}};const openModal=()=>{setIsModalOpen(true);};const closeModal=()=>{setIsModalOpen(false);setSelectedQuestion('');};const handleExampleQuestionClick=async question=>{setSelectedQuestion(question);handleSend(question);};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"chatIcon\",src:chatIcon,alt:\"Chat Icon\",onClick:openModal}),/*#__PURE__*/_jsx(\"div\",{className:\"icon-label\",children:\"AI \\uBE44\\uC11C\"}),isModalOpen&&/*#__PURE__*/_jsx(\"div\",{className:\"modal\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"close\",onClick:closeModal,children:\"\\xD7\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-box\",children:[messages.map((message,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"message \".concat(message.sender),children:/*#__PURE__*/_jsx(\"p\",{className:\"message-text\",children:message.text.split('\\n').map((line,index)=>/*#__PURE__*/_jsxs(\"span\",{children:[line,/*#__PURE__*/_jsx(\"br\",{})]},index))})},index)),!selectedQuestion&&/*#__PURE__*/_jsx(\"div\",{className:\"example-questions\",children:exampleQuestions.map((question,index)=>/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-secondary\",onClick:()=>handleExampleQuestionClick(question),children:question},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mb-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:input,onChange:handleInputChange,onKeyPress:handleKeyPress})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-auto\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary\",type:\"button\",onClick:()=>handleSend(input),children:\"Send\"})})]})]})})]});}export default Chat;","map":{"version":3,"names":["React","useState","useEffect","axios","chatIcon","jsx","_jsx","jsxs","_jsxs","Chat","messages","setMessages","input","setInput","isModalOpen","setIsModalOpen","selectedQuestion","setSelectedQuestion","isLoading","setIsLoading","exampleQuestions","text","sender","prevMessages","fetchReply","message","data","post","response","error","console","handleSend","reply","handleInputChange","e","target","value","handleKeyPress","key","openModal","closeModal","handleExampleQuestionClick","question","className","children","src","alt","onClick","map","index","concat","split","line","type","onChange","onKeyPress"],"sources":["C:/Users/admin/Desktop/MSA/src/main/frontend/src/components/js/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../css/modal.css';\nimport chatIcon from '../img/chat.png';\n\nfunction Chat() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedQuestion, setSelectedQuestion] = useState('');\n  const [isLoading, setIsLoading] = useState(false); // 로딩 상태 추가\n\n  const exampleQuestions = ['제주도 여행 가고싶어', '강원도 맛집 추천해줘', '부산 관광지 추천해줘'];\n\n  useEffect(() => {\n    if (isModalOpen) {\n      setMessages([{ text: '무엇을 도와드릴까요?', sender: 'bot' }]);\n    }\n  }, [isModalOpen]);\n\n  useEffect(() => {\n    if (isLoading) {\n      setMessages(prevMessages => [...prevMessages, { text: '로딩 중...', sender: 'bot' }]);\n    }\n  }, [isLoading]); // isLoading 상태가 변경될 때만 useEffect가 실행되도록 설정\n\nconst fetchReply = async (message) => {\n  try {\n    const { data } = await axios.post('/chat', { message });\n    return data.response;\n  } catch (error) {\n    console.error('Error fetching reply:', error);\n    return 'Failed to get response from server';\n  }\n};\n\nconst handleSend = async (message) => {\n  // 사용자의 질문을 먼저 대화 영역에 표시합니다.\n  setMessages(prevMessages => [...prevMessages, { text: message, sender: 'user' }]);\n  // 로딩 상태를 활성화합니다.\n  setIsLoading(true);\n      // 추천 질문을 사라지게 설정합니다.\n      setSelectedQuestion(message);\n  try {\n    // 답변을 받아옵니다.\n    const reply = await fetchReply(message);\n    // 답변을 받은 후에 대화 영역에 표시합니다.\n    setMessages(prevMessages => [...prevMessages, { text: reply, sender: 'bot' }]);\n  } catch (error) {\n    console.error('Error fetching reply:', error);\n    // 에러가 발생했을 경우 대화 영역에 에러 메시지를 표시합니다.\n    setMessages(prevMessages => [...prevMessages, { text: 'Failed to get response from server', sender: 'bot' }]);\n  } finally {\n    // 로딩 상태를 비활성화합니다.\n    setIsLoading(false);\n  }\n};\n\n\n  const handleInputChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSend(input);\n      setInput('');\n    }\n  };\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedQuestion('');\n  };\n\n  const handleExampleQuestionClick = async (question) => {\n    setSelectedQuestion(question);\n    handleSend(question);\n  };\n\n  return (\n    <div className=\"chat\">\n      <img className=\"chatIcon\" src={chatIcon} alt=\"Chat Icon\" onClick={openModal} />\n      <div className=\"icon-label\">AI 비서</div>\n      {/* 모달 */}\n      {isModalOpen && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <div className=\"close\" onClick={closeModal}>&times;</div>\n\n            {/* 대화 표시 */}\n            <div className=\"chat-box\">\n              {messages.map((message, index) => (\n                <div key={index} className={`message ${message.sender}`}>\n                  <p className=\"message-text\">{message.text.split('\\n').map((line, index) => <span key={index}>{line}<br/></span>)}</p>\n                </div>\n              ))}\n            {/* 추천 질문 */}\n            {!selectedQuestion && (\n              <div className=\"example-questions\">\n                {exampleQuestions.map((question, index) => (\n                  <button key={index} className=\"btn btn-outline-secondary\" onClick={() => handleExampleQuestionClick(question)}>{question}</button>\n                ))}\n              </div>\n            )}\n            </div>\n            {/* 입력 필드 */}\n            <div className=\"row mb-3\">\n              <div className=\"col\">\n                <input type=\"text\" className=\"form-control\" value={input} onChange={handleInputChange} onKeyPress={handleKeyPress} />\n              </div>\n              <div className=\"col-auto\">\n                <button className=\"btn btn-primary\" type=\"button\" onClick={() => handleSend(input)}>Send</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}